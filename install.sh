#!/bin/bash

# üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ HTMLPageGen –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[‚úÖ –£–°–ü–ï–•]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚ùå –û–®–ò–ë–ö–ê]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤ WSL
check_wsl() {
    if [[ ! -f /proc/version ]] || ! grep -q Microsoft /proc/version; then
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –≤ WSL (Windows Subsystem for Linux)"
        print_warning "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ WSL –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ Ubuntu, –∑–∞—Ç–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É"
        exit 1
    fi
    print_success "WSL –æ–±–Ω–∞—Ä—É–∂–µ–Ω - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
update_system() {
    print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã Ubuntu..."
    sudo apt update -qq
    sudo apt upgrade -y -qq
    print_success "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ curl, git, python
    sudo apt install -y curl git python3 python3-pip python3-venv nodejs npm
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π
    python3 --version
    node --version
    npm --version
    
    print_success "–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
clone_repository() {
    print_status "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ HTMLPageGen..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -d "HTMLpageGen" ]; then
        print_warning "–ù–∞–π–¥–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ - —É–¥–∞–ª—è–µ–º..."
        rm -rf HTMLpageGen
    fi
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
    git clone https://github.com/rybkagreen/HTMLpageGen.git
    cd HTMLpageGen
    
    print_success "–ü—Ä–æ–µ–∫—Ç —Å–∫–∞—á–∞–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Backend
setup_backend() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend (Python)..."
    
    cd backend
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    python3 -m venv venv
    source venv/bin/activate
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    pip install --upgrade pip
    pip install -r requirements.txt
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    cat > .env << EOF
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
AI_PROVIDER=local-ai

# API –∫–ª—é—á–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞)
# DEEPSEEK_API_KEY=sk-your-key-here
# HUGGINGFACE_API_KEY=hf_your-key-here
# OPENAI_API_KEY=sk-your-key-here

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
# DATABASE_URL=postgresql://user:pass@localhost/htmlpagegen
EOF
    
    cd ..
    print_success "Backend –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Frontend
setup_frontend() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Frontend (Node.js)..."
    
    cd frontend
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    npm install
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env.local —Ñ–∞–π–ª–∞
    cat > .env.local << EOF
# URL Backend API
NEXT_PUBLIC_API_URL=http://localhost:8000

# –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
NODE_ENV=development
EOF
    
    cd ..
    print_success "Frontend –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞
create_start_script() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞..."
    
    cat > start.sh << 'EOF'
#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ HTMLPageGen

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ HTMLPageGen...${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
cleanup() {
    echo -e "\n${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    kill $(jobs -p) 2>/dev/null || true
    exit 0
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
trap cleanup SIGINT

# –ó–∞–ø—É—Å–∫ Backend
echo -e "${GREEN}üì¶ –ó–∞–ø—É—Å–∫ Backend (FastAPI)...${NC}"
cd backend
source venv/bin/activate
uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload &
BACKEND_PID=$!
cd ..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Backend
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Backend...${NC}"
sleep 5

# –ó–∞–ø—É—Å–∫ Frontend
echo -e "${GREEN}üåê –ó–∞–ø—É—Å–∫ Frontend (Next.js)...${NC}"
cd frontend
npm run dev &
FRONTEND_PID=$!
cd ..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Frontend
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Frontend...${NC}"
sleep 10

echo -e "${GREEN}‚úÖ HTMLPageGen —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!${NC}"
echo -e "${GREEN}üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É:${NC}"
echo -e "${GREEN}   üëâ http://localhost:3000${NC}"
echo -e "${GREEN}üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:${NC}"
echo -e "${GREEN}   üëâ http://localhost:8000/docs${NC}"
echo -e "\n${YELLOW}üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C${NC}"

# –û–∂–∏–¥–∞–Ω–∏–µ
wait
EOF

    chmod +x start.sh
    print_success "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
create_stop_script() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    cat > stop.sh << 'EOF'
#!/bin/bash

# üõë –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ HTMLPageGen

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ HTMLPageGen..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –ø–æ—Ä—Ç–∞–º
pkill -f "uvicorn app.main:app" 2>/dev/null || true
pkill -f "next-server" 2>/dev/null || true
pkill -f "npm run dev" 2>/dev/null || true

echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
EOF

    chmod +x stop.sh
    print_success "–°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–∑–¥–∞–Ω"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
test_installation() {
    print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –¢–µ—Å—Ç Backend
    cd backend
    source venv/bin/activate
    python -c "
from app.modules.ai_integration.service import AIService
service = AIService()
print(f'‚úÖ Backend: {service.provider.__class__.__name__}')
" 2>/dev/null || print_warning "Backend —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª (—ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"
    
    cd ..
    
    # –¢–µ—Å—Ç Frontend
    cd frontend
    if npm list next >/dev/null 2>&1; then
        print_success "Frontend: Next.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_warning "Frontend —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª (—ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)"
    fi
    cd ..
    
    print_success "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –ü–æ–∫–∞–∑ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
show_final_instructions() {
    echo -e "\n${GREEN}üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û! üéâ${NC}\n"
    
    echo -e "${BLUE}üìã –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É:${NC}"
    echo -e "   1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ${YELLOW}./start.sh${NC}"
    echo -e "   2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã"
    echo -e "   3. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ: ${YELLOW}http://localhost:3000${NC}"
    
    echo -e "\n${BLUE}üõë –ö–∞–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É:${NC}"
    echo -e "   - –ù–∞–∂–º–∏—Ç–µ ${YELLOW}Ctrl+C${NC} –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
    echo -e "   - –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ${YELLOW}./stop.sh${NC}"
    
    echo -e "\n${BLUE}üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo -e "   - –ó–∞–ø—É—Å–∫: ${YELLOW}./start.sh${NC}"
    echo -e "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: ${YELLOW}./stop.sh${NC}"
    echo -e "   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${YELLOW}git pull${NC}"
    
    echo -e "\n${BLUE}üìû –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:${NC}"
    echo -e "   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Ubuntu"
    echo -e "   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ: ${YELLOW}cd HTMLpageGen && ./start.sh${NC}"
    echo -e "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: ${YELLOW}QUICK_INSTALL_WINDOWS.md${NC}"
    
    echo -e "\n${GREEN}üéØ –£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HTMLPageGen! üéØ${NC}\n"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${GREEN}üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ HTMLPageGen! üöÄ${NC}\n"
    
    print_status "–ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
    
    check_wsl
    update_system
    install_dependencies
    clone_repository
    setup_backend
    setup_frontend
    create_start_script
    create_stop_script
    test_installation
    show_final_instructions
}

# –ó–∞–ø—É—Å–∫
main
