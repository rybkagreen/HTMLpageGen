#!/bin/bash

# üöÄ –£–º–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ HTMLPageGen
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_logo() {
    echo -e "${PURPLE}"
    cat << "EOF"
    ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     
    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     
    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     
    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
    ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    
     PageGen - –ò–ò –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä HTML –°—Ç—Ä–∞–Ω–∏—Ü
EOF
    echo -e "${NC}"
}

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[‚úÖ]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[‚ö†Ô∏è]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚ùå]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
check_prerequisites() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ WSL
    if [[ ! -f /proc/version ]] || ! grep -q Microsoft /proc/version; then
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –≤ WSL (Ubuntu)"
        print_warning "–û—Ç–∫—Ä–æ–π—Ç–µ Ubuntu –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [[ ! -d "backend" ]] || [[ ! -d "frontend" ]]; then
        print_error "–ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ HTMLPageGen"
        print_warning "–í—ã–ø–æ–ª–Ω–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É: curl -fsSL https://raw.githubusercontent.com/rybkagreen/HTMLpageGen/main/install.sh | bash"
        exit 1
    fi
    
    print_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    local missing_deps=0
    
    # Python
    if ! command -v python3 &> /dev/null; then
        print_warning "Python3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        sudo apt update -qq && sudo apt install -y python3 python3-pip python3-venv
        ((missing_deps++))
    fi
    
    # Node.js
    if ! command -v node &> /dev/null; then
        print_warning "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt install -y nodejs
        ((missing_deps++))
    fi
    
    if [[ $missing_deps -eq 0 ]]; then
        print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_success "–ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend
setup_backend() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend..."
    
    cd backend
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [[ ! -d "venv" ]]; then
        print_warning "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        python3 -m venv venv
    fi
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
    source venv/bin/activate
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if [[ ! -f "venv/pyvenv.cfg" ]] || ! pip list | grep -q fastapi; then
        print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        pip install --upgrade pip -q
        pip install -r requirements.txt -q
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if [[ ! -f ".env" ]]; then
        print_warning "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Backend..."
        cat > .env << EOF
AI_PROVIDER=local-ai
# –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–Ω–µ—à–Ω–∏—Ö API:
# DEEPSEEK_API_KEY=sk-your-key-here
# HUGGINGFACE_API_KEY=hf_your-key-here
# OPENAI_API_KEY=sk-your-key-here
EOF
    fi
    
    cd ..
    print_success "Backend –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ frontend
setup_frontend() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Frontend..."
    
    cd frontend
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if [[ ! -d "node_modules" ]] || [[ ! -f "node_modules/.package-lock.json" ]]; then
        print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm install --silent
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env.local –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if [[ ! -f ".env.local" ]]; then
        print_warning "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Frontend..."
        cat > .env.local << EOF
NEXT_PUBLIC_API_URL=http://localhost:8000
NODE_ENV=development
EOF
    fi
    
    cd ..
    print_success "Frontend –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 8000 (Backend)
    if nc -z localhost 8000 2>/dev/null; then
        print_warning "–ü–æ—Ä—Ç 8000 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
        pkill -f "uvicorn app.main:app" 2>/dev/null || true
        sleep 2
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 3000 (Frontend)
    if nc -z localhost 3000 2>/dev/null; then
        print_warning "–ü–æ—Ä—Ç 3000 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
        pkill -f "next-server" 2>/dev/null || true
        pkill -f "npm run dev" 2>/dev/null || true
        sleep 2
    fi
    
    print_success "–ü–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ backend
start_backend() {
    print_status "–ó–∞–ø—É—Å–∫ Backend (FastAPI)..."
    
    cd backend
    source venv/bin/activate
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ FastAPI –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    if ! python -c "from app.main import app; print('Backend OK')" 2>/dev/null; then
        print_error "–û—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ Backend - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É"
        cd ..
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ
    uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload > ../backend.log 2>&1 &
    BACKEND_PID=$!
    
    cd ..
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Backend..."
    for i in {1..30}; do
        if curl -s http://localhost:8000/health >/dev/null 2>&1; then
            print_success "Backend –∑–∞–ø—É—â–µ–Ω (PID: $BACKEND_PID)"
            return 0
        fi
        sleep 1
        echo -n "."
    done
    
    print_error "Backend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 30 —Å–µ–∫—É–Ω–¥"
    return 1
}

# –ó–∞–ø—É—Å–∫ frontend
start_frontend() {
    print_status "–ó–∞–ø—É—Å–∫ Frontend (Next.js)..."
    
    cd frontend
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Next.js –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    if ! npm run build >/dev/null 2>&1; then
        print_warning "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ - –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤ dev —Ä–µ–∂–∏–º–µ..."
    fi
    
    # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ
    npm run dev > ../frontend.log 2>&1 &
    FRONTEND_PID=$!
    
    cd ..
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Frontend..."
    for i in {1..60}; do
        if curl -s http://localhost:3000 >/dev/null 2>&1; then
            print_success "Frontend –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID)"
            return 0
        fi
        sleep 1
        echo -n "."
    done
    
    print_error "Frontend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 60 —Å–µ–∫—É–Ω–¥"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
health_check() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
    
    # Backend health check
    BACKEND_HEALTH=$(curl -s http://localhost:8000/health 2>/dev/null)
    if [[ $BACKEND_HEALTH == *"healthy"* ]]; then
        print_success "Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        print_warning "Backend API –æ—Ç–≤–µ—á–∞–µ—Ç —Å –æ—à–∏–±–∫–∞–º–∏"
    fi
    
    # Frontend check
    if curl -s http://localhost:3000 >/dev/null 2>&1; then
        print_success "Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        print_warning "Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # AI Provider check
    AI_INFO=$(curl -s http://localhost:8000/api/v1/ai/provider-info 2>/dev/null)
    if [[ $AI_INFO == *"local-ai"* ]]; then
        print_success "AI Provider —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ"
    else
        print_warning "–ü—Ä–æ–±–ª–µ–º—ã —Å AI Provider"
    fi
}

# –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
show_info() {
    echo -e "\n${GREEN}üéâ HTMLPageGen —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! üéâ${NC}\n"
    
    echo -e "${BLUE}üì± –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:${NC}"
    echo -e "   üåê –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${YELLOW}http://localhost:3000${NC}"
    echo -e "   üé® –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä HTML: ${YELLOW}http://localhost:3000/generator${NC}"
    echo -e "   ü§ñ –ò–ò –ß–∞—Ç: ${YELLOW}http://localhost:3000/chat${NC}"
    
    echo -e "\n${BLUE}‚öôÔ∏è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
    echo -e "   üìö Swagger UI: ${YELLOW}http://localhost:8000/docs${NC}"
    echo -e "   üîç Health Check: ${YELLOW}http://localhost:8000/health${NC}"
    
    echo -e "\n${BLUE}üìã –õ–æ–≥–∏:${NC}"
    echo -e "   üîß Backend: ${YELLOW}tail -f backend.log${NC}"
    echo -e "   üåê Frontend: ${YELLOW}tail -f frontend.log${NC}"
    
    echo -e "\n${BLUE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞:${NC}"
    echo -e "   ‚å®Ô∏è –ù–∞–∂–º–∏—Ç–µ ${YELLOW}Ctrl+C${NC} –≤ —ç—Ç–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
    echo -e "   üîß –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ${YELLOW}./stop.sh${NC}"
    
    echo -e "\n${PURPLE}üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:${NC}"
    echo -e "   ‚Ä¢ –ù–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ —ç—Ç–æ –æ–∫–Ω–æ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
    echo -e "   ‚Ä¢ –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-2 –º–∏–Ω—É—Ç—ã"
    echo -e "   ‚Ä¢ –í—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞—á–∏–≤–∞—é—Ç—Å—è"
    echo -e "   ‚Ä¢ –í –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞"
    
    echo -e "\n${GREEN}üöÄ –ù–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
cleanup() {
    echo -e "\n${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ HTMLPageGen...${NC}"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    if [[ -n $BACKEND_PID ]]; then
        kill $BACKEND_PID 2>/dev/null || true
    fi
    if [[ -n $FRONTEND_PID ]]; then
        kill $FRONTEND_PID 2>/dev/null || true
    fi
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    pkill -f "uvicorn app.main:app" 2>/dev/null || true
    pkill -f "next-server" 2>/dev/null || true
    pkill -f "npm run dev" 2>/dev/null || true
    
    echo -e "${GREEN}‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    echo -e "${BLUE}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
    exit 0
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_logo
    
    print_status "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTMLPageGen..."
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    check_prerequisites
    check_dependencies
    setup_backend
    setup_frontend
    check_ports
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    if start_backend && start_frontend; then
        sleep 3  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—é
        health_check
        show_info
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ... (–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)${NC}"
        wait
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        print_status "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: backend.log –∏ frontend.log"
        print_status "–ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É: ./diagnose.sh"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
